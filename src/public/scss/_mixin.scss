@use './vars' as vars;

// Mixins

// Import internal font
@mixin font-face(
  $name,
  $weight,
  $url-eot,
  $url-ttf: null,
  $url-woff: null,
  $url-woff2: null
) {
  // generate src for existing formats
  $src: url($url-eot) format('eot');
  @if $url-ttf {
    $src: $src, url($url-ttf) format('ttf');
  }
  @if $url-woff {
    $src: $src, url($url-woff) format('woff');
  }
  @if $url-woff2 {
    $src: $src, url($url-woff2) format('woff2');
  }

  // generate font face
  @font-face {
    src: $src;
    font-family: $name;
    font-weight: $weight;
    font-display: swap;
  }
}

// Implementation typography
@mixin typography($type) {
  @if $type == 'body' {
    font-size: map-get($map: vars.$font-sizes, $key: 'body');
    font-weight: map-get($map: vars.$font-weights, $key: 1);
  } @else if $type == 'body-bold' {
    font-size: map-get($map: vars.$font-sizes, $key: 'body');
    font-weight: map-get($map: vars.$font-weights, $key: 1);
  } @else if $type == 'label' {
    font-size: map-get($map: vars.$font-sizes, $key: 'label');
    font-weight: map-get($map: vars.$font-weights, $key: 1);
  } @else if $type == 'label-bold' {
    font-size: map-get($map: vars.$font-sizes, $key: 'label');
    font-weight: map-get($map: vars.$font-weights, $key: 2);
  }
}

// Implementation flexbox
@mixin flex(
  $wrap: nowrap,
  $dir: row,
  $gap: 18px,
  $justify-content: null,
  $align-items: null
) {
  display: flex;
  flex-flow: $wrap $dir;
  gap: $gap;
  justify-content: $justify-content;
  align-items: $align-items;
}

// Implementation media queries
@mixin media($type, $min: null, $max: null) {
  @if $type == xs {
    @media only screen and (min-width: vars.$screen-xs-min) {
      @content;
    }
  } @else if $type == sm {
    @media only screen and (min-width: vars.$screen-sm-min) {
      @content;
    }
  } @else if $type == md {
    @media only screen and (min-width: vars.$screen-md-min) {
      @content;
    }
  } @else if $type == lg {
    @media only screen and (min-width: vars.$screen-lg-min) {
      @content;
    }
  } @else if $type == custom {
    @media screen and (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
}

// hide scrollbar
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  overflow: -moz-scrollbars-none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

// Background img
@mixin bg-img($url) {
  background: url($url);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}
